name: KMP CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Auto-format Code
        run: ./gradlew ktlintFormat || true  # Continue on formatting errors

      - name: Commit Formatting Changes
        run: |
          git config --global user.email "ci@example.com"
          git config --global user.name "CI Bot"
          git add -A
          git diff-index --quiet HEAD || git commit -m "ktlint auto-fix [skip ci]"
          git push

      - name: Run Linters
        run: ./gradlew ktlintCheck detekt --continue

  test:
    name: Run Tests
    needs: code-quality  # Requires code-quality job first
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            task: jvmTest
          - os: macos-latest
            task: iosSimulatorArm64Test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Xcode (macOS)
        if: matrix.os == 'macos-latest'
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.0'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run Platform Tests
        run: ./gradlew :shared:${{ matrix.task }} --stacktrace

      - name: Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-reports-${{ matrix.os }}
          path: |
            **/build/reports/tests/
            **/build/test-results/
